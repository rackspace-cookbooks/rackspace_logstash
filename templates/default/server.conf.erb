input {
gent.conf.erb
  <% if node['logstash']['server']['inputs'].empty? -%>
gent.conf.erb
  tcp {
gent.conf.erb
    type => "tcp-input"
gent.conf.erb
    port => "5959"
gent.conf.erb
    format => "json_event"
gent.conf.erb
  }
gent.conf.erb
  <% else -%> 
gent.conf.erb
    <%= LogstashConf.section_to_str(node['logstash']['server']['inputs']) %>
gent.conf.erb
  <% end -%>
gent.conf.erb
}
gent.conf.erb

gent.conf.erb
<% unless node['logstash']['server']['filters'].empty? -%>
gent.conf.erb
filter {
gent.conf.erb
  <%= LogstashConf.section_to_str(node['logstash']['server']['filters'], node['logstash']['server']['version'], @patterns_dir) %>
gent.conf.erb
}
gent.conf.erb
<% end -%>
gent.conf.erb

gent.conf.erb
output {
gent.conf.erb
  <% if node['logstash']['server']['debug'] -%>
gent.conf.erb
  stdout { debug => true debug_format => "json" }
gent.conf.erb
  <% end -%>
gent.conf.erb
  <% if @enable_embedded_es -%>
gent.conf.erb
  elasticsearch { embedded => true }
gent.conf.erb
  <% elsif not @es_server_ip.empty? -%>
gent.conf.erb
  elasticsearch { host => "<%= @es_server_ip %>" cluster => "<%= @es_cluster %>" }
gent.conf.erb
  <% end -%>
gent.conf.erb
  <% unless @graphite_server_ip.empty? -%>
gent.conf.erb
  graphite { host => "<%= @graphite_server_ip %>" metrics => ["logstash.events", "1"] }
gent.conf.erb
  <% end -%>
gent.conf.erb
  <% # unless node['logstash']['server']['outputs'].empty? -%>
gent.conf.erb
    <%= LogstashConf.section_to_str(node['logstash']['server']['outputs']) %>
gent.conf.erb
  <% # end -%>
gent.conf.erb
}
gent.conf.erb
